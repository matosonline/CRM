-complete validation by sending errors to form and populating it with the data provided initially by the users
-Fix form in add prospect. make it so it has 2 columns instead of big one to make it more compact.
-Add individual forms to edit infdividual items, then submit them and redirect back to prospects page
-Give the ability to assign/re-assign
-Build out notes/activity section
-give the ability to upload documents relative to that user and record the activity

2 tables
------------------------
Table 1: Notes
Table 2: Activity

Table 1: Schema (notes)
------------------------
created_by -> integer 
note_type -> varchar -> default('note')
note -> text
note_history -> text -> to store JSON data related to history

Create a controller in general profile accessible by both admin and users


Table 2: Schema
-----------------------
created_by -> integer 
activity_type -> default('activity')
            Types could be:
            -uploaded a file
            -reached out to client (possibility to link to phone conversation if using a VOIP provider)
            -client meeting
            -estimate created 
            -estimate modified
            -estimate accepted 
details -> text Stored as JSON

   
    -Give admin the access to assign the leads

    -Build out a basic HUD of activity for individual users to view their prospects that have been assigned_to

    - Make a notes/activity section for prospects
    - Give the ability to tag other users in posts to notify them
    - Give the ability to upload documents related to that particular client

    -Build out an estimates table
        Schema::create...
        created_by --> int --> users id
        prospect_id --> int --> prospect id
        name/title --> varchar
        details --> JsonType --> text
        revisions --> JsonType
        status --> varchar --> default: 'in progress'. Other options -> 'Awaiting revisions', 'revised', 'Awaiting approval', 'Approved' 
        isSent --> tinyInt --> default 0
        isReceived --> tinyInteger --> default 0
        isAccepted --> tinyInteger --> default 0
        workOrders --> varchar





Build out internal messaging system
    -Give the ability to have multiple users on a single messaging thread


/*
**** Next additions to the web app ****
*/

Build out the users section of the 
